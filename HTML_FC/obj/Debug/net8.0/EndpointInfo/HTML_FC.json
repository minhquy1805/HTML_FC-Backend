{
  "openapi": "3.0.1",
  "info": {
    "title": "HTML_FC",
    "version": "1.0"
  },
  "paths": {
    "/api/v1/CalendarApi/insert": {
      "post": {
        "tags": [
          "CalendarApi"
        ],
        "parameters": [
          {
            "name": "isForListInlineOrListCrud",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Calendar"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Calendar"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Calendar"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/CalendarApi/update": {
      "post": {
        "tags": [
          "CalendarApi"
        ],
        "parameters": [
          {
            "name": "isForListInlineOrListCrud",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Calendar"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Calendar"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Calendar"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/CalendarApi/delete": {
      "delete": {
        "tags": [
          "CalendarApi"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/CalendarApi/selectbyprimarykey": {
      "get": {
        "tags": [
          "CalendarApi"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Calendar"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Calendar"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Calendar"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/CalendarApi/selectall": {
      "get": {
        "tags": [
          "CalendarApi"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Calendar"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Calendar"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Calendar"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/CalendarApi/selectalldynamicwhere": {
      "get": {
        "tags": [
          "CalendarApi"
        ],
        "parameters": [
          {
            "name": "calendarId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "title",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "eventCalendar",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendarTime",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "field1",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "field2",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "field3",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "field4",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "field5",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "createdAt",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "flag",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Calendar"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Calendar"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Calendar"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/CertificateApi/insert": {
      "post": {
        "tags": [
          "CertificateApi"
        ],
        "parameters": [
          {
            "name": "isForListInlineOrListCrud",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Certificate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Certificate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Certificate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/CertificateApi/update": {
      "post": {
        "tags": [
          "CertificateApi"
        ],
        "parameters": [
          {
            "name": "isForListInlineOrListCrud",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Certificate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Certificate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Certificate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/CertificateApi/delete": {
      "delete": {
        "tags": [
          "CertificateApi"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/CertificateApi/selectbyprimarykey": {
      "get": {
        "tags": [
          "CertificateApi"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Certificate"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Certificate"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Certificate"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/CertificateApi/selectall": {
      "get": {
        "tags": [
          "CertificateApi"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Certificate"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Certificate"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Certificate"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/CertificateApi/selectalldynamicwhere": {
      "get": {
        "tags": [
          "CertificateApi"
        ],
        "parameters": [
          {
            "name": "certificateId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "certificateTypeId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "title",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "contentCert",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "dateCert",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "signCert",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "reasonCert",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "field1",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "field2",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "field3",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "field4",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "field5",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "flag",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Certificate"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Certificate"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Certificate"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/CertificateApi/selectallbycertificateTypeId": {
      "get": {
        "tags": [
          "CertificateApi"
        ],
        "parameters": [
          {
            "name": "certificateTypeId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Certificate"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Certificate"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Certificate"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/CertificateTypeApi/insert": {
      "post": {
        "tags": [
          "CertificateTypeApi"
        ],
        "parameters": [
          {
            "name": "isForListInlineOrListCrud",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CertificateType"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CertificateType"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CertificateType"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/CertificateTypeApi/update": {
      "post": {
        "tags": [
          "CertificateTypeApi"
        ],
        "parameters": [
          {
            "name": "isForListInlineOrListCrud",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CertificateType"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CertificateType"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CertificateType"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/CertificateTypeApi/delete": {
      "delete": {
        "tags": [
          "CertificateTypeApi"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/CertificateTypeApi/selectbyprimarykey": {
      "get": {
        "tags": [
          "CertificateTypeApi"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CertificateType"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CertificateType"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CertificateType"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/CertificateTypeApi/selectall": {
      "get": {
        "tags": [
          "CertificateTypeApi"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CertificateType"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CertificateType"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CertificateType"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/CertificateTypeApi/selectalldynamicwhere": {
      "get": {
        "tags": [
          "CertificateTypeApi"
        ],
        "parameters": [
          {
            "name": "certificateTypeId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "certificateTitle",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CertificateType"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CertificateType"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CertificateType"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/FileUpload/File/Upload System File": {
      "post": {
        "tags": [
          "File"
        ],
        "parameters": [
          {
            "name": "projectCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              },
              "encoding": {
                "file": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/FileUpload/File/Upload Single Picture": {
      "post": {
        "tags": [
          "File"
        ],
        "parameters": [
          {
            "name": "uploadDirectory",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              },
              "encoding": {
                "file": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/FileUpload/File/Upload Multiple File": {
      "post": {
        "tags": [
          "File"
        ],
        "parameters": [
          {
            "name": "uploadDirectory",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "files": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "binary"
                    }
                  }
                }
              },
              "encoding": {
                "files": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/InExpenApi/insert": {
      "post": {
        "tags": [
          "InExpenApi"
        ],
        "parameters": [
          {
            "name": "isForListInlineOrListCrud",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InExpen"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/InExpen"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/InExpen"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/InExpenApi/update": {
      "post": {
        "tags": [
          "InExpenApi"
        ],
        "parameters": [
          {
            "name": "isForListInlineOrListCrud",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InExpen"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/InExpen"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/InExpen"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/InExpenApi/delete": {
      "delete": {
        "tags": [
          "InExpenApi"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/InExpenApi/selectbyprimarykey": {
      "get": {
        "tags": [
          "InExpenApi"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/InExpen"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InExpen"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/InExpen"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/InExpenApi/selectall": {
      "get": {
        "tags": [
          "InExpenApi"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InExpen"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InExpen"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InExpen"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/InExpenApi/selectalldynamicwhere": {
      "get": {
        "tags": [
          "InExpenApi"
        ],
        "parameters": [
          {
            "name": "inExpenId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "memberId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "transactionTime",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "moneyValue",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "float"
            }
          },
          {
            "name": "type",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "description",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "createdAt",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "fileAttach",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "field1",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "field2",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "field3",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "field4",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "field5",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "flag",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InExpen"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InExpen"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InExpen"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/InExpenApi/selectallbyMemberId": {
      "get": {
        "tags": [
          "InExpenApi"
        ],
        "parameters": [
          {
            "name": "memberId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InExpen"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InExpen"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InExpen"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/MemberApi/selectbyprimarykey": {
      "get": {
        "tags": [
          "MemberApi"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Member"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Member"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Member"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/MemberApi/selectall": {
      "get": {
        "tags": [
          "MemberApi"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Member"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Member"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Member"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/MemberApi/selectalldynamicwhere": {
      "get": {
        "tags": [
          "MemberApi"
        ],
        "parameters": [
          {
            "name": "memberId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "firstName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "middleName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lastName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "phone",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "email",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "facebook",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "address",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "type",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "avatar",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "numberPlayer",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "role",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "username",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "password",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "field1",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "field2",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "field3",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "field4",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "field5",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "createdAt",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "flag",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Member"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Member"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Member"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/MemberApi/insert": {
      "post": {
        "tags": [
          "MemberApi"
        ],
        "parameters": [
          {
            "name": "isForListInlineOrListCrud",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Member"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Member"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Member"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/MemberApi/update": {
      "post": {
        "tags": [
          "MemberApi"
        ],
        "parameters": [
          {
            "name": "isForListInlineOrListCrud",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Member"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Member"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Member"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/MemberApi/delete": {
      "delete": {
        "tags": [
          "MemberApi"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/login": {
      "post": {
        "tags": [
          "MemberApi"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/verify-email": {
      "post": {
        "tags": [
          "MemberApi"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VerifyEmailRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/VerifyEmailRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/VerifyEmailRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/resend-email": {
      "post": {
        "tags": [
          "MemberApi"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string"
              }
            },
            "text/json": {
              "schema": {
                "type": "string"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "string"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/forgot-password": {
      "post": {
        "tags": [
          "MemberApi"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string"
              }
            },
            "text/json": {
              "schema": {
                "type": "string"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "string"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/reset-password": {
      "post": {
        "tags": [
          "MemberApi"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResetPasswordRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ResetPasswordRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ResetPasswordRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/NewsApi/insert": {
      "post": {
        "tags": [
          "NewsApi"
        ],
        "parameters": [
          {
            "name": "isForListInlineOrListCrud",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/News"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/News"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/News"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/NewsApi/update": {
      "post": {
        "tags": [
          "NewsApi"
        ],
        "parameters": [
          {
            "name": "isForListInlineOrListCrud",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/News"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/News"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/News"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/NewsApi/delete": {
      "delete": {
        "tags": [
          "NewsApi"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/NewsApi/selectbyprimarykey": {
      "get": {
        "tags": [
          "NewsApi"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/News"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/News"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/News"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/NewsApi/selectall": {
      "get": {
        "tags": [
          "NewsApi"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/News"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/News"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/News"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/NewsApi/selectalldynamicwhere": {
      "get": {
        "tags": [
          "NewsApi"
        ],
        "parameters": [
          {
            "name": "newsId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "title",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "content",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "image",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "type",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "field1",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "field2",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "field3",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "field4",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "field5",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "createdAt",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "flag",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/News"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/News"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/News"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Calendar": {
        "type": "object",
        "properties": {
          "calendarId": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "event": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "calendarTime": {
            "pattern": "^(((((0[13578])|([13578])|(1[02]))[\\-\\/\\s]?((0[1-9])|([1-9])|([1-2][0-9])|(3[01])))|((([469])|(11))[\\-\\/\\s]?((0[1-9])|([1-9])|([1-2][0-9])|(30)))|((02|2)[\\-\\/\\s]?((0[1-9])|([1-9])|([1-2][0-9]))))[\\-\\/\\s]?\\d{4})(\\s(((0[1-9])|([1-9])|(1[0-2]))\\:([0-5][0-9])((\\s)|(\\:([0-5][0-9])\\s))([AM|PM|am|pm]{2,2})))?$",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "field1": {
            "type": "string",
            "nullable": true
          },
          "field2": {
            "type": "string",
            "nullable": true
          },
          "field3": {
            "type": "string",
            "nullable": true
          },
          "field4": {
            "type": "string",
            "nullable": true
          },
          "field5": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "pattern": "^(((((0[13578])|([13578])|(1[02]))[\\-\\/\\s]?((0[1-9])|([1-9])|([1-2][0-9])|(3[01])))|((([469])|(11))[\\-\\/\\s]?((0[1-9])|([1-9])|([1-2][0-9])|(30)))|((02|2)[\\-\\/\\s]?((0[1-9])|([1-9])|([1-2][0-9]))))[\\-\\/\\s]?\\d{4})(\\s(((0[1-9])|([1-9])|(1[0-2]))\\:([0-5][0-9])((\\s)|(\\:([0-5][0-9])\\s))([AM|PM|am|pm]{2,2})))?$",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "flag": {
            "maxLength": 1,
            "minLength": 0,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Certificate": {
        "type": "object",
        "properties": {
          "certificateId": {
            "type": "integer",
            "format": "int32"
          },
          "certificateTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "title": {
            "maxLength": 1500,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "contentCert": {
            "maxLength": 1500,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "dateCert": {
            "pattern": "^(((((0[13578])|([13578])|(1[02]))[\\-\\/\\s]?((0[1-9])|([1-9])|([1-2][0-9])|(3[01])))|((([469])|(11))[\\-\\/\\s]?((0[1-9])|([1-9])|([1-2][0-9])|(30)))|((02|2)[\\-\\/\\s]?((0[1-9])|([1-9])|([1-2][0-9]))))[\\-\\/\\s]?\\d{4})(\\s(((0[1-9])|([1-9])|(1[0-2]))\\:([0-5][0-9])((\\s)|(\\:([0-5][0-9])\\s))([AM|PM|am|pm]{2,2})))?$",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "signCert": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "reasonCert": {
            "type": "string",
            "nullable": true
          },
          "field1": {
            "type": "string",
            "nullable": true
          },
          "field2": {
            "type": "string",
            "nullable": true
          },
          "field3": {
            "type": "string",
            "nullable": true
          },
          "field4": {
            "type": "string",
            "nullable": true
          },
          "field5": {
            "type": "string",
            "nullable": true
          },
          "flag": {
            "maxLength": 1,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "certificateType": {
            "$ref": "#/components/schemas/CertificateType"
          }
        },
        "additionalProperties": false
      },
      "CertificateType": {
        "type": "object",
        "properties": {
          "certificateTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "certificateTitle": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "InExpen": {
        "type": "object",
        "properties": {
          "inExpenId": {
            "type": "integer",
            "format": "int32"
          },
          "memberId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "transactionTime": {
            "pattern": "^(((((0[13578])|([13578])|(1[02]))[\\-\\/\\s]?((0[1-9])|([1-9])|([1-2][0-9])|(3[01])))|((([469])|(11))[\\-\\/\\s]?((0[1-9])|([1-9])|([1-2][0-9])|(30)))|((02|2)[\\-\\/\\s]?((0[1-9])|([1-9])|([1-2][0-9]))))[\\-\\/\\s]?\\d{4})(\\s(((0[1-9])|([1-9])|(1[0-2]))\\:([0-5][0-9])((\\s)|(\\:([0-5][0-9])\\s))([AM|PM|am|pm]{2,2})))?$",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "moneyValue": {
            "minimum": 0,
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "type": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "description": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "pattern": "^(((((0[13578])|([13578])|(1[02]))[\\-\\/\\s]?((0[1-9])|([1-9])|([1-2][0-9])|(3[01])))|((([469])|(11))[\\-\\/\\s]?((0[1-9])|([1-9])|([1-2][0-9])|(30)))|((02|2)[\\-\\/\\s]?((0[1-9])|([1-9])|([1-2][0-9]))))[\\-\\/\\s]?\\d{4})(\\s(((0[1-9])|([1-9])|(1[0-2]))\\:([0-5][0-9])((\\s)|(\\:([0-5][0-9])\\s))([AM|PM|am|pm]{2,2})))?$",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "fileAttach": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "field1": {
            "type": "string",
            "nullable": true
          },
          "field2": {
            "type": "string",
            "nullable": true
          },
          "field3": {
            "type": "string",
            "nullable": true
          },
          "field4": {
            "type": "string",
            "nullable": true
          },
          "field5": {
            "type": "string",
            "nullable": true
          },
          "flag": {
            "maxLength": 1,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "member": {
            "$ref": "#/components/schemas/Member"
          }
        },
        "additionalProperties": false
      },
      "LoginRequest": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Member": {
        "type": "object",
        "properties": {
          "memberId": {
            "type": "integer",
            "format": "int32"
          },
          "firstName": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "middleName": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "phone": {
            "pattern": "^\\+?[0-9]{7,15}$",
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "format": "email",
            "nullable": true
          },
          "facebook": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "address": {
            "maxLength": 1500,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "type": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "avatar": {
            "maxLength": 1500,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "numberPlayer": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "role": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "username": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "password": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "field1": {
            "type": "string",
            "nullable": true
          },
          "field2": {
            "type": "string",
            "nullable": true
          },
          "field3": {
            "type": "string",
            "nullable": true
          },
          "field4": {
            "type": "string",
            "nullable": true
          },
          "field5": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "pattern": "^(((((0[13578])|([13578])|(1[02]))[\\-\\/\\s]?((0[1-9])|([1-9])|([1-2][0-9])|(3[01])))|((([469])|(11))[\\-\\/\\s]?((0[1-9])|([1-9])|([1-2][0-9])|(30)))|((02|2)[\\-\\/\\s]?((0[1-9])|([1-9])|([1-2][0-9]))))[\\-\\/\\s]?\\d{4})(\\s(((0[1-9])|([1-9])|(1[0-2]))\\:([0-5][0-9])((\\s)|(\\:([0-5][0-9])\\s))([AM|PM|am|pm]{2,2})))?$",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "flag": {
            "maxLength": 1,
            "minLength": 0,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "News": {
        "type": "object",
        "properties": {
          "newsId": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "lead": {
            "maxLength": 1000,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "contentNew": {
            "maxLength": 3000,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "image": {
            "maxLength": 1500,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "field1": {
            "type": "string",
            "nullable": true
          },
          "field2": {
            "type": "string",
            "nullable": true
          },
          "field3": {
            "type": "string",
            "nullable": true
          },
          "field4": {
            "type": "string",
            "nullable": true
          },
          "field5": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "pattern": "^(((((0[13578])|([13578])|(1[02]))[\\-\\/\\s]?((0[1-9])|([1-9])|([1-2][0-9])|(3[01])))|((([469])|(11))[\\-\\/\\s]?((0[1-9])|([1-9])|([1-2][0-9])|(30)))|((02|2)[\\-\\/\\s]?((0[1-9])|([1-9])|([1-2][0-9]))))[\\-\\/\\s]?\\d{4})(\\s(((0[1-9])|([1-9])|(1[0-2]))\\:([0-5][0-9])((\\s)|(\\:([0-5][0-9])\\s))([AM|PM|am|pm]{2,2})))?$",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "flag": {
            "maxLength": 1,
            "minLength": 0,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ResetPasswordRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "newPassword": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "VerifyEmailRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    }
  }
}